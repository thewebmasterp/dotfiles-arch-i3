

  ########################
 ##########################
##### I3 CONFIGURATION #####
 ##########################
  ########################
  # Documentation: https://i3wm.org/docs/userguide.html 
  # author: {
  #   name: Zdravko Dimov
  #   craft: MERN stack, JavaScript web developer.
  #   github: @thewebmasterp
  #   instagram: @webmaster_project
  #   twitter: @thewebmasterp
  #   e-mail: thewebmasterp@gmail.com
  # }  
  # For configuring your other tools, take a look at the
  # ~/.config dir where you will find a ton
  # of configuration files for all of the tools
  # you love!
  #
  #   Happy Hacking! ;D
  #
 
#
###
###################
#### ESSENTIALS  ##
###################

 # start a terminal
 bindsym $mod+Return exec termite #i3-sensible-terminal
 
 # start a floating terminal
 bindsym $mod+Shift+Return exec termite --class float

 # start ranger
 bindsym $mod+Shift+bar exec termite -e "ranger" --class float

 # primary button (in my case the windows button)
 set $mod mod4

 # default i3 font
 font pango:monospace 8
 
 # xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
 # screen before suspend. Use loginctl lock-session to lock your screen.
 exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

 # auto start NetworkManager
 exec --no-startup-id nm-applet

 # auto start i3-battery-popup
 exec --no-startup-id i3-battery-popup -n -t 30s -s ~/.config/ringtones/alert_on_call.wav

 # start rofi (program launcher)
 bindsym $mod+d exec rofi -show run

 # reload the configuration file
 bindsym $mod+Shift+c reload

 # restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
 bindsym $mod+Shift+r restart

 # toggle bulgarian/english keyboard layout (Alt+Shift)
 exec_always "setxkbmap -option 'grp:alt_shift_toggle' -layout us,bg"



#
###
#################
#### I3 STATUS ##
#################

 #colors
 set $bar_background    #0000000
 set $bar_text_active   #2ca2f5
 set $bar_text_inactive #ffffff

 #primary screen bar
 bar {
   output primary
   id bar-1
   status_command /bin/i3status-rs ~/.config/i3/status.toml
   position top
   font pango: Hack 11   
   colors {  #           BORDER           BACKGROUND       TEXT
     focused_workspace   $bar_background  $bar_background  $bar_text_active
     inactive_workspace  $bar_background  $bar_background  $bar_text_inactive
     active_workspace    $bar_background  $bar_background  $bar_text_inactive
     urgent_workspace    $bar_background  $bar_background  $bar_text_inactive
     binding_mode        $bar_background  $bar_background  $bar_text_inactive
   }
 }

 #second screen bar
 bar {
   output HDMI2
   id bar-2
   status_command /bin/i3status-rs ~/.config/i3/status1.toml
   position top
   font pango: Hack 11
   colors {  #           BORDER           BACKGROUND       TEXT
     focused_workspace   $bar_background  $bar_background  $bar_text_active
     inactive_workspace  $bar_background  $bar_background  $bar_text_inactive
     active_workspace    $bar_background  $bar_background  $bar_text_inactive
     urgent_workspace    $bar_background  $bar_background  $bar_text_inactive
     binding_mode        $bar_background  $bar_background  $bar_text_inactive
   }
 }  



#
###
#########################
#### LAYOUT/NAVIGATION ##
#########################

 # individual windows settings
 for_window [class="float"] floating enable
 for_window [class="Pavucontrol"] floating enable

 # change focus
 bindsym $mod+j focus left
 bindsym $mod+k focus down
 bindsym $mod+l focus up
 bindsym $mod+semicolon focus right
 bindsym $mod+Left focus left
 bindsym $mod+Down focus down
 bindsym $mod+Up focus up
 bindsym $mod+Right focus right

 # move focused window
 bindsym $mod+Shift+j move left
 bindsym $mod+Shift+k move down
 bindsym $mod+Shift+l move up
 bindsym $mod+Shift+semicolon move right
 bindsym $mod+Shift+Left move left
 bindsym $mod+Shift+Down move down
 bindsym $mod+Shift+Up move up
 bindsym $mod+Shift+Right move right

 # windows to corner
 bindsym $mod+KP_End   exec --no-startup-id ~/.config/scripts/movetocorner.sh 1
 bindsym $mod+KP_Down  exec --no-startup-id ~/.config/scripts/movetocorner.sh 2
 bindsym $mod+KP_Next  exec --no-startup-id ~/.config/scripts/movetocorner.sh 3
 bindsym $mod+KP_Left  exec --no-startup-id ~/.config/scripts/movetocorner.sh 4
 bindsym $mod+KP_Begin exec --no-startup-id ~/.config/scripts/movetocorner.sh 5
 bindsym $mod+KP_Right exec --no-startup-id ~/.config/scripts/movetocorner.sh 6
 bindsym $mod+KP_Home  exec --no-startup-id ~/.config/scripts/movetocorner.sh 7 
 bindsym $mod+KP_Up    exec --no-startup-id ~/.config/scripts/movetocorner.sh 8
 bindsym $mod+KP_Prior exec --no-startup-id ~/.config/scripts/movetocorner.sh 9


 # split in horizontal orientation
 bindsym $mod+h split h

 # split in vertical orientation
 bindsym $mod+v split v

 # enter fullscreen mode for the focused container
 bindsym $mod+f fullscreen toggle

 # change container layout
 bindsym $mod+s layout stacking 
 bindsym $mod+w layout tabbed 
 bindsym $mod+e layout toggle split 

 # toggle tiling / floating
 bindsym $mod+Shift+space floating toggle
 
 # use Mouse+$mod to drag floating windows to their wanted position
 floating_modifier $mod

 # change focus between tiling / floating windows
 bindsym $mod+space focus mode_toggle

 # focus the parent container
 bindsym $mod+a focus parent

 # focus the child container
 #bindsym $mod+d focus child

 # kill focused window
 bindsym $mod+q kill

 # Define names for default workspaces for which we configure key bindings later on.
 set $ws1 "1"
 set $ws2 "2"
 set $ws3 "3"
 set $ws4 "4"
 set $ws5 "5"
 set $ws6 "6"
 set $ws7 "7"
 set $ws8 "8"
 set $ws9 "9"
 set $ws10 "10"
 
 # switch to workspace
 bindsym $mod+1 workspace number $ws1
 bindsym $mod+2 workspace number $ws2
 bindsym $mod+3 workspace number $ws3
 bindsym $mod+4 workspace number $ws4
 bindsym $mod+5 workspace number $ws5
 bindsym $mod+6 workspace number $ws6
 bindsym $mod+7 workspace number $ws7
 bindsym $mod+8 workspace number $ws8
 bindsym $mod+9 workspace number $ws9
 bindsym $mod+0 workspace number $ws10

 # move focused container to workspace
 bindsym $mod+Shift+1 move container to workspace number $ws1
 bindsym $mod+Shift+2 move container to workspace number $ws2
 bindsym $mod+Shift+3 move container to workspace number $ws3
 bindsym $mod+Shift+4 move container to workspace number $ws4
 bindsym $mod+Shift+5 move container to workspace number $ws5
 bindsym $mod+Shift+6 move container to workspace number $ws6
 bindsym $mod+Shift+7 move container to workspace number $ws7
 bindsym $mod+Shift+8 move container to workspace number $ws8
 bindsym $mod+Shift+9 move container to workspace number $ws9
 bindsym $mod+Shift+0 move container to workspace number $ws10

 # resize window (you can also use the mouse for that)
 mode "resize" {
   # These bindings trigger as soon as you enter the resize mode

   # Pressing left will grow the window’s width.
   # Pressing right will shrink the window’s width.
   # Pressing up will grow the window’s height.
   # Pressing down will shrink the window’s height.
   bindsym j resize grow width 10 px or 10 ppt
   bindsym k resize shrink height 10 px or 10 ppt
   bindsym l resize grow height 10 px or 10 ppt
   bindsym semicolon resize shrink width 10 px or 10 ppt

   # same bindings, but for the arrow keys
   bindsym Left resize grow width 10 px or 10 ppt
   bindsym Down resize shrink height 10 px or 10 ppt
   bindsym Up resize grow height 10 px or 10 ppt
   bindsym Right resize shrink width 10 px or 10 ppt

   # exit resize mode
   bindsym Return mode "default"  
   bindsym Escape mode "default" 
   bindsym $mod+r mode "default"
 }
 bindsym $mod+r mode "resize"

 #no status bar on each window
 for_window [class="^.*"] border pixel 1
 new_window 1pixel
 
 #i3 gaps
 gaps inner 10
 gaps outer 10
 smart_gaps on
 bindsym $mod+g gaps inner current set 0; gaps outer current set 0;
 bindsym $mod+Shift+g gaps inner current set 10; gaps outer current set 10;


#
###
#################
## AUDIO/VIDEO ##
#################

 # adjust volume
 set $refresh_i3status killall -SIGUSR1 i3status
 bindsym XF86AudioRaiseVolume exec amixer -q set Master 1+ unmute && $refresh_i3status
 bindsym XF86AudioLowerVolume exec amixer -q set Master 1- unmute && $refresh_i3status
 bindsym XF86AudioMute exec amixer -q set Master toggle && $refresh_i3status
 bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

 # adjust brightness (primal monitor)
 bindsym XF86MonBrightnessUp exec xbacklight -inc 5
 bindsym XF86MonBrightnessDown exec xbacklight -dec 5
 
 # adjust brightness (second monitor)
 bindcode 72 exec ~/.config/scripts/bright + HDMI2
 bindcode 71 exec ~/.config/scripts/bright - HDMI2

 # turn redshift on/off (blue light reducer)
 bindsym $mod+Shift+i exec redshift -t 3700:3700 # -g 0.5
 bindsym $mod+Shift+u exec pkill redshift

 #redshift on startup (little icon in the i3bar)
 # exec redshift-gtk

 # load/reload the screen configuration
 # TODO: use udev rules to do this!
 exec /usr/local/bin/CUSTOM-screenHandler.sh
 bindsym $mod+Shift+t exec --no-startup-id trigger.sh

 # screenshots
 # bindsym Print exec scrot -e 'mv $f ~/Images/Screenshots'
 bindsym Print       exec flameshot full
 bindsym Shift+Print exec flameshot gui


#
###
###############
#### EXIT I3 ##
###############

 set $modes  "[l]ogout, [r]eboot, [p]oweroff, [s]uspend"
 mode $modes {
   bindsym l exec i3-msg exit
   bindsym r exec systemctl reboot
   bindsym p exec systemctl poweroff
   bindcode 73 exec systemctl suspend
   bindsym s exec systemctl suspend
   
   # exit resize mode
   bindsym Return mode "default"  
   bindsym Escape mode "default" 
   bindsym $mod+r mode "default"
 }
 bindcode 73 mode $modes

 #i3 lock
 bindsym $mod+z exec /home/master/Downloads/try2/i3lock-fancy-multimonitor/lock
 exec xautolock -time 5 -locker /home/master/Downloads/try2/i3lock-fancy-multimonitor/lock -corners 0-00
 exec xautolock -time 1 -locker systemctl suspend 













